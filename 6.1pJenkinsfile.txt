pipeline {
    agent any

    stages {
        stage('Build') {
            steps {
                script {
                    // Task: Build the code using Maven
                    echo 'Building the code using Maven...'
                    sh 'mvn clean install >> logs/pipeline.log 2>&1'  // Append build logs to single log file
                }
            }
        }

        stage('Unit and Integration Tests') {
            steps {
                script {
                    echo 'Running unit tests using JUnit...'
                    echo 'Running integration tests using TestNG...'
                    sh 'mvn test >> logs/pipeline.log 2>&1'  // Append test logs to single log file
                }
            }
            post {
                always {
                    emailext(
                        to: 'baldhasmit@gmail.com',
                        subject: "Unit and Integration Tests Completed",
                        body: "The unit and integration tests stage has completed. The logs so far are attached.",
                        attachmentsPattern: 'logs/pipeline.log',  // Send the cumulative log file
                        attachLog: true
                    )
                }
            }
        }

        stage('Code Analysis') {
            steps {
                script {
                    echo 'Performing code analysis using SonarQube...'
                    sh 'sonar-scanner >> logs/pipeline.log 2>&1'  // Append code analysis logs
                }
            }
        }

        stage('Security Scan') {
            steps {
                script {
                    echo 'Performing security scan using OWASP ZAP...'
                    sh 'zap-cli start >> logs/pipeline.log 2>&1'  // Append security scan logs
                }
            }
            post {
                always {
                    emailext(
                        to: 'baldhasmit@gmail.com',
                        subject: "Security Scan Completed",
                        body: "The security scan stage has completed. The logs so far are attached.",
                        attachmentsPattern: 'logs/pipeline.log',  // Send the same cumulative log file
                        attachLog: true
                    )
                }
            }
        }

        stage('Deploy to Staging') {
            steps {
                script {
                    echo 'Deploying the application to the staging server using AWS CLI...'
                    sh 'aws deploy >> logs/pipeline.log 2>&1'  // Append deployment logs
                }
            }
        }

        stage('Integration Tests on Staging') {
            steps {
                script {
                    echo 'Running integration tests on the staging environment using Selenium...'
                    sh 'selenium-tests >> logs/pipeline.log 2>&1'  // Append staging tests logs
                }
            }
        }

        stage('Deploy to Production') {
            steps {
                script {
                    echo 'Deploying the application to the production server using AWS CLI...'
                    sh 'aws deploy >> logs/pipeline.log 2>&1'  // Append production deployment logs
                }
            }
        }
    }

    post {
        always {
            cleanWs()  // Optionally clean workspace after pipeline completion
        }
    }
}
